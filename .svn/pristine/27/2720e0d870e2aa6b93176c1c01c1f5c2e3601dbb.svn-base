import { Component, OnInit } from '@angular/core'
import { FormGroup, FormControl, Validators } from '@angular/forms'
import { InterfaceService } from '../../shared/services/http/interfaces.service'
import { PopService } from '../../shared/services/pop/pop.service'

@Component({
	selector: 'app-application',
	templateUrl: './application.component.html',
	styleUrls: [
		'./../../../assets/icon/menu/iconfont.css',
		'./../../../assets/icon/operate/iconfont.css',
		'./application.component.scss'
	]
})
export class ApplicationComponent implements OnInit {
	public searchItems
	public modalItems
	public modalStatus

	public total
	public totalPage
	public pageNum

	addForm: FormGroup
	public modalTitle: String
	public authActive: boolean

	rows = []

	toast = {
		position: 'center-center'
	}

	constructor(private interfaceService: InterfaceService, private popService: PopService) {
		this.searchItems = new Items()
		this.modalItems = new Items()
		this.searchItems.status = ''

		this.addForm = new FormGroup({
			appName: new FormControl(),
			appAddress: new FormControl(
				'',
				Validators.pattern(
					/^([hH][tT]{2}[pP]:\/\/|[hH][tT]{2}[pP][sS]:\/\/)(([A-Za-z0-9-~]+)\.)+([A-Za-z0-9-~\/])+$/
				)
			),
			remark: new FormControl(),
			status: new FormControl()
		})
	}

	ngOnInit() {
		this.search(1, '')
	}

	search(e, type) {
		if (!type) {
			this.searchItems = new Items()
			this.searchItems.status = ''
		}
		const params = {
			appName: this.searchItems.appName ? this.searchItems.appName : '',
			appId: this.searchItems.appId ? this.searchItems.appId : '',
			status: this.searchItems.status ? this.searchItems.status : '',
			pageNum: e,
			pageSize: 10
		}
		this.interfaceService.getAppsData(params).then((result) => {
			if(result){
				this.rows = result.list
				this.total = result.total
				this.totalPage = result.pages
				this.pageNum = result.pageNum
			}
		})
	}

	reset() {
		this.searchItems.appName = ''
		this.searchItems.appId = ''
		this.searchItems.status = ''
	}

	changeTitle(title, status) {
		this.modalTitle = title
		this.modalStatus = status
	}
	setValue(value) {
		this.modalItems.id = value.id
		this.modalItems.appId = value.appId
		this.modalItems.appKey = value.appKey
		this.modalItems.appName = value.appName
		this.modalItems.status = value.status
		this.modalItems.appAddress = value.appAddress
		this.modalItems.remark = value.remark
	}
	modify(row) {
		this.setValue(row)
	}
	add() {
		this.modalItems.status = 1
	}

	switchange(row) {
		var status = { status: null }
		if (row.status == 0) {
			status.status = 1
		} else if (row.status == 1) {
			status.status = 0
		}
		this.interfaceService.updateAppStatus({ id: row.id, status: status.status }).then((result) => {
			if (result) {
				this.popService.addToast({ type: 'success', msg: '状态修改成功' })
			}
			this.rows = []
			this.search(1, '')
		})
	}

	onSubmit() {
		// this.modalItems.id = this.modalStatus === 'edit' ? this.modalItems.id : ''
		this.interfaceService
			.savaApplication(this.addForm.value, this.modalStatus, this.modalItems.id)
			.then((result) => {
				if (result) {
					this.popService.addToast({ type: 'success', msg: '成功' })
				}
				this.rows = []
				this.search(1, '')
				this.addForm.reset()
			})
	}

	changePage(e) {
		this.search(e, '')
	}
}
class Items {
	constructor(
		public id?: String,
		public appName?: String,
		public appId?: String,
		public status?: any,
		public appAddress?: String,
		public remark?: String
	) {}
}
