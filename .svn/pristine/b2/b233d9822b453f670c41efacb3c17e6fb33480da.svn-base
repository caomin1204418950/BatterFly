<div id="pcoded" class="pcoded" [ngClass]="animateSidebar" [attr.nav-type]="navType" [attr.theme-layout]="themeLayout" [attr.vertical-placement]="verticalPlacement"
  [attr.vertical-layout]="verticalLayout" [attr.pcoded-device-type]="pcodedDeviceType" [attr.vertical-nav-type]="verticalNavType"
  [attr.vertical-effect]="verticalEffect" [attr.vnavigation-view]="vnavigationView" [attr.fream-type]="freamType" [attr.sidebar-img]="sidebarImg"
  [attr.sidebar-img-type]="sidebarImgType" [attr.layout-type]="layoutType" (window:resize)="onResize($event)">
  <div class="pcoded-overlay-box"></div>
  <div class="pcoded-container navbar-wrapper">
    <nav class="navbar header-navbar pcoded-header headBg" [attr.header-theme]="headerTheme" [attr.pcoded-header-position]="pcodedHeaderPosition">
      <div class="navbar-wrapper">
        <div class="navbar-logo" id="LeftMenuWidth">
          <a [routerLink]="['/home']" class="ripple light left-logo">
            <img class="img-fluid" src="assets/images/logo.png" alt="Able Pro 7" />
            <span>启明星管理后台</span>
          </a>
        </div>
        <div class="navbar-container container-fluid">
          <!-- <ul class="navLeft">
            <li *ngFor="let item of AppList">
              <a href="{{item.appAddress}}">{{item.appName}}</a>
            </li>
          </ul> -->
          <ul [@mobileHeaderNavRight]="navRight" [ngClass]="navRight" class="nav-right">
            <li (clickOutside)="notificationOutsideClick('profile')" class="user-profile header-notification ripple light" (click)="toggleProfileNotification()">
              <a href="javascript:" style="height: 3.1rem">
                <img src="assets/images/head_icon_03.png" alt="User-Profile-Image">
                <span>{{userName}}</span>
                <img src="assets/images/head_arrow_06.png" alt="" style="width: 15px; margin-left: 10px;">
                <!-- <i class="feather icon-chevron-down"></i> -->
              </a>
              <ul [@notificationBottom]="profileNotification" class="show-notification profile-notification" [ngClass]="profileNotificationClass">
                <li class="ripple">
                  <a (click)="modalDefault.show();">
                    <i class="icon iconfont icon-password"></i> 修改密码
                  </a>
                </li>
              </ul>
            </li>
            <li class="ripple">
              <a (click)="logout()">
                <img src="assets/images/logOut_05.png" alt="" style="margin-right: 10px;"> 注销登录</a>
            </li>
          </ul>
        </div>
      </div>
    </nav>

    <div class="pcoded-main-container" [style.margin-top]="headerFixedMargin">
      <!--  -->
      <div class="pcoded-wrapper">
        <nav id="main_navbar" class="pcoded-navbar" (clickOutside)="onClickedOutsideSidebar($event)" [exclude]="'#mobile-collapse'"
          [attr.navbar-theme]="navBarTheme" [attr.active-item-theme]="activeItemTheme" sub-item-theme="theme2" active-item-style="style0"
          [attr.pcoded-header-position]="pcodedHeaderPosition" [attr.pcoded-navbar-position]="pcodedSidebarPosition" [style.top]="headerFixedTop"
          [style.height]="sidebarFixedNavHeight" (mouseleave)="hoverOutsideSidebar()">
          <perfect-scrollbar [style.max-width]="'255px'" [style.max-height]="sidebarFixedHeight" [config]="config" [ngClass]="perfectDisable">
            <div class="pcoded-inner-navbar main-menu" appAccordion>

              <div *ngFor="let asideItems of menuItems.getAll()">
                <ul class="pcoded-item pcoded-left-item" [attr.item-border]="itemBorder" [attr.item-border-style]="itemBorderStyle" [attr.subitem-border]="subItemBorder"
                  *ngFor="let asideItem of asideItems.main" appAccordionLink group="{{asideItem.state}}">
                  <li [routerLinkActive]="['active']" *ngIf="asideItem.type === 'external'" appAccordionLink group="{{asideItem.state}}">
                    <a [routerLinkActive]="['active']" class="ripple" [routerLink]="[asideItem.url]" target="{{asideItem.target ? '_blank' : '_self'}}"
                      appAccordionToggle>
                      <span class="pcoded-micon">
                        <i class=" icon iconfont {{ asideItem.icon }}"></i>
                        <b>{{ asideItem.short_label }}</b>
                      </span>
                      <span class="pcoded-mtext">{{ asideItem.name }}</span>
                      <span *ngFor="let asideBadge of asideItem.badge" class="pcoded-badge label label-{{ asideBadge.type }}">{{asideBadge.value}}</span>
                      <span class="pcoded-mcaret"></span>
                    </a>
                  </li>

                  <li [routerLinkActive]="['active']" *ngIf="asideItem.type === 'link'" appAccordionLink group="{{asideItem.state}}">
                    <a [routerLinkActive]="['active']" class="ripple" [routerLink]="[asideItem.url]" target="{{asideItem.target ? '_blank' : '_self'}}"
                      appAccordionToggle *ngIf="asideItem.main_state; else mainContent">
                      <span class="pcoded-micon">
                        <i class=" icon iconfont {{ asideItem.icon }}"></i>
                        <b>{{ asideItem.short_label }}</b>
                      </span>
                      <span class="pcoded-mtext">{{ asideItem.name }}</span>
                      <span *ngFor="let asideBadge of asideItem.badge" class="pcoded-badge label label-{{ asideBadge.type }}">{{asideBadge.value}}</span>
                      <span class="pcoded-mcaret"></span>
                    </a>
                    <ng-template #mainContent>
                      <a [routerLinkActive]="['active']" class="ripple" [routerLink]="[asideItem.url]" target="{{asideItem.target ? '_blank' : '_self'}}"
                        appAccordionToggle>
                        <span class="pcoded-micon">
                          <i class=" icon iconfont {{ asideItem.icon }}"></i>
                          <b>{{ asideItem.short_label }}</b>
                        </span>
                        <span class="pcoded-mtext">{{ asideItem.name }}</span>
                        <span *ngFor="let asideBadge of asideItem.badge" class="pcoded-badge label label-{{ asideBadge.type }}">{{asideBadge.value}}</span>
                        <span class="pcoded-mcaret"></span>
                      </a>
                    </ng-template>
                  </li>
                  <li (mouseleave)="fireClickLeave($event)" [routerLinkActive]="['active']" *ngIf="asideItem.type === 'sub'" class="pcoded-hasmenu"
                    [attr.dropdown-icon]="dropDownIcon" [attr.subitem-icon]="subItemIcon" appAccordionLink group="{{asideItem.state}}">
                    <a (mouseover)="fireClick($event)" [routerLinkActive]="['active']" href="javascript:;" appAccordionToggle>
                      <div class="ripple menu-ripple"></div>
                      <span class="pcoded-micon">
                        <i class=" icon iconfont {{ asideItem.icon }}"></i>
                        <b>{{ asideItem.short_label }}</b>
                      </span>
                      <span class="pcoded-mtext">{{ asideItem.name }}</span>
                      <span *ngFor="let asideBadge of asideItem.badge" class="pcoded-badge label label-{{ asideBadge.type }}">{{asideBadge.value}}</span>
                      <span class="pcoded-mcaret"></span>
                    </a>
                    <ul class="pcoded-submenu">
                      <ng-template ngFor let-asideChildren [ngForOf]="asideItem.children">
                        <li [routerLinkActive]="['active']" *ngIf="asideChildren.type !== 'sub'">
                          <a [routerLinkActive]="['active']" [routerLink]="[asideChildren.url]" target="{{asideChildren.target ? '_blank' : '_self'}}">
                            <div class="ripple menu-ripple"></div>
                            <!-- <span class="pcoded-micon"><i class="icon-angle-right"></i></span> -->
                            <span class="pcoded-micon">
                              <i class="icon-dot"></i>
                            </span>
                            <span class="pcoded-mtext">{{ asideChildren.name }} </span>
                            <span *ngFor="let asideChildrenBadge of asideChildren.badge" class="pcoded-badge label label-{{ asideChildrenBadge.type }}">{{asideChildrenBadge.value}}</span>
                            <span class="pcoded-mcaret"></span>
                          </a>
                        </li>

                        <li (mouseleave)="fireClickLeave($event)" [routerLinkActive]="['active']" class="pcoded-hasmenu" [attr.dropdown-icon]="dropDownIcon"
                          [attr.subitem-icon]="subItemIcon" *ngIf="asideChildren.type === 'sub'" appAccordionLink group="sub-toggled">
                          <a (mouseover)="fireClick($event)" [routerLinkActive]="['active']" href="javascript:;" appAccordionToggle>
                            <div class="ripple menu-ripple"></div>
                            <!-- <span class="pcoded-micon"><i class="icon-direction-alt"></i></span> -->
                            <span class="pcoded-micon">
                              <i class="icon-dot"></i>
                            </span>
                            <span class="pcoded-mtext">{{ asideChildren.name }}</span>
                            <span *ngFor="let asideChildrenBadge of asideChildren.badge" class="pcoded-badge label label-{{ asideChildrenBadge.type }}">{{asideChildrenBadge.value}}</span>
                            <span class="pcoded-mcaret"></span>
                          </a>
                          <ul class="pcoded-submenu">
                            <ng-template ngFor let-asideChildrenSub [ngForOf]="asideChildren.children">
                              <li [routerLinkActive]="['active']">
                                <a [routerLinkActive]="['active']" [routerLink]="[asideChildrenSub.url]" target="{{asideChildrenSub.target ? '_blank' : '_self'}}">
                                  <div class="ripple menu-ripple"></div>
                                  <!-- <span class="pcoded-micon"><i class="icon-angle-right"></i></span> -->
                                  <span class="pcoded-micon">
                                    <i class="icon-dot"></i>
                                  </span>
                                  <span class="pcoded-mtext">{{ asideChildrenSub.name }}</span>
                                  <span *ngFor="let asideChildrenSubBadge of asideChildrenSub.badge" class="pcoded-badge label label-{{ asideChildrenSubBadge.type }}">{{asideChildrenSubBadge.value}}</span>
                                  <span class="pcoded-mcaret"></span>
                                </a>
                              </li>
                            </ng-template>
                          </ul>
                        </li>
                      </ng-template>
                    </ul>
                  </li>
                </ul>
              </div>
            </div>
          </perfect-scrollbar>
        </nav>
        <div class="pcoded-content ml255">
          <app-breadcrumbs></app-breadcrumbs>
          <div class="pcoded-inner-content">
            <!-- Main-body start -->
            <div class="main-body">
              <div class="page-wrapper">
                <router-outlet>
                  <title></title>
                  <app-spinner></app-spinner>
                </router-outlet>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
<app-modal-basic [hideFooter]="'false'" #modalDefault>
  <div class="app-modal-header">
    <h4 class="modal-title">修改密码</h4>
    <button type="button" class="close basic-close" (click)="modalDefault.hide();reset();pwdForm.reset()">
      <span aria-hidden="true">&times;</span>
    </button>
  </div>
  <div class="app-modal-body">
    <form [formGroup]="pwdForm" accept-charset='UTF-8'>
      <div class="form-group row">
        <label class="col-sm-3 col-form-label">原始密码</label>
        <div class="col-sm-9">
          <input type="password" placeholder="请输入原始密码" class="form-control" [(ngModel)]="pwd.origPwd" id="origPwd" required formControlName="origPwd">
          <div class="messages text-danger" *ngIf="pwdForm.controls.origPwd.dirty || pwdForm.controls.origPwd.touched">
            <span *ngIf="pwdForm.controls.origPwd.errors?.required">原始密码不能为空</span>
            <span *ngIf="pwdForm.controls.origPwd.errors?.pattern">密码由字母+数字组成，长度不低于6</span>
          </div>
        </div>
      </div>
      <div class="form-group row">
        <label class="col-sm-3 col-form-label">新密码</label>
        <div class="col-sm-9">
          <input type="password" placeholder="请输入新密码" class="form-control" [(ngModel)]="pwd.newPwd" id="newPwd" required formControlName="newPwd">
          <div class="messages text-danger" *ngIf="pwdForm.controls.newPwd.dirty || pwdForm.controls.newPwd.touched">
            <span *ngIf="pwdForm.controls.newPwd.errors?.required">新密码不能为空</span>
            <span *ngIf="pwdForm.controls.newPwd.errors?.pattern">密码由字母+数字组成，长度不低于6</span>
          </div>
        </div>
      </div>
      <div class="form-group row">
        <label class="col-sm-3 col-form-label">确认密码</label>
        <div class="col-sm-9">
          <input type="password" placeholder="确认新密码" class="form-control" [(ngModel)]="pwd.confPwd" id="confPwd" required formControlName="confPwd">
          <div class="messages text-danger" *ngIf="pwdForm.controls.confPwd.dirty || pwdForm.controls.confPwd.touched">
            <span *ngIf="pwdForm.controls.confPwd.errors?.required">确认新密码不能为空</span>
            <span *ngIf="pwdForm.controls.confPwd.errors?.pattern">密码由字母+数字组成，长度不低于6</span>
            <span *ngIf="(pwdForm.controls.newPwd.valid)&&(pwdForm.controls.confPwd.valid)&&(pwd.newPwd!=pwd.confPwd)">新密码与确认密码不一致</span>
          </div>
        </div>
      </div>
      <div class="form-group form-group-btn row">
        <button type="button" class="btn btn-primary btn-outline-primary ripple light" (click)="modalDefault.hide();reset();pwdForm.reset()">取消</button>
        <button type="button" class="btn btn-primary ripple light" (click)="modalDefault.hide();resetPwd()" [disabled]="!pwdForm.valid">确定</button>
      </div>
    </form>
  </div>
</app-modal-basic>
<ng2-toasty [position]="toast.position"></ng2-toasty>